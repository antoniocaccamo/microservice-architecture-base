/*

CREATE TABLE AUTHORITY (
   ID BIGINT GENERATED BY DEFAULT AS IDENTITY,
   NAME VARCHAR(255),
   PRIMARY KEY (ID)
);

ALTER TABLE AUTHORITY ADD CONSTRAINT AUTHORITY_NAME UNIQUE(NAME);

CREATE TABLE USER_ (
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY,
  PASSWORD VARCHAR(255),
  USER_NAME VARCHAR(255),
  ACCOUNT_EXPIRED BOOLEAN,
  ACCOUNT_LOCKED BOOLEAN,
  CREDENTIALS_EXPIRED BOOLEAN,
  ENABLED BOOLEAN,
  PRIMARY KEY (ID)
);

ALTER TABLE USER_ ADD CONSTRAINT USER_USER_NAME UNIQUE(USER_NAME);

CREATE TABLE USERS_AUTHORITIES (
   USER_ID BIGINT NOT NULL,
   AUTHORITY_ID BIGINT NOT NULL,
   PRIMARY KEY (USER_ID, AUTHORITY_ID)
);

ALTER TABLE USERS_AUTHORITIES ADD CONSTRAINT USERS_AUTHORITIES_AUTHORITY
   FOREIGN KEY (AUTHORITY_ID) REFERENCES AUTHORITY;

ALTER TABLE USERS_AUTHORITIES ADD CONSTRAINT USERS_AUTHORITIES_USER
   FOREIGN KEY (USER_ID) REFERENCES USER_;

*/


-- drop table if exists authority;
CREATE TABLE AUTHORITY (
  ID          INTEGER,
  AUTHORITY   VARCHAR(255),
  PRIMARY KEY (ID)
);


drop table if exists credentials;

CREATE TABLE CREDENTIALS (
  id  integer,
  enabled boolean not null,
  name varchar(255) not null,
  password varchar(255) not null,
  version integer,
  primary key (id)
);

--DROP TABLE IF EXISTS CREDENTIALS_AUTHORITIES;
CREATE TABLE CREDENTIALS_AUTHORITIES (
  CREDENTIAL_ID BIGINT NOT NULL,
  AUTHORITY_ID BIGINT NOT NULL,
  PRIMARY KEY (CREDENTIAL_ID, AUTHORITY_ID)
);

ALTER TABLE CREDENTIALS_AUTHORITIES
  ADD CONSTRAINT CREDENTIALS_AUTHORITIES_AUTHORITY
    FOREIGN KEY (AUTHORITY_ID) REFERENCES AUTHORITY
;

ALTER TABLE CREDENTIALS_AUTHORITIES
  ADD CONSTRAINT CREDENTIALS_AUTHORITIES_USER
    FOREIGN KEY (CREDENTIAL_ID) REFERENCES CREDENTIALS
;


